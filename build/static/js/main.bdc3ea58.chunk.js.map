{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAWeA,EAXJ,SAACC,GACR,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAI,UAC1D,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCiBXC,EAtBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAGjB,OACQ,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GAEjB,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdE,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZK,SCIdC,EAbC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACG,qBAAKZ,UAAU,MAAf,SACI,uBACKA,UAAU,uCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDXI,EARF,SAACjB,GACV,OACI,qBAAKkB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,SAAjE,SACKrB,EAAMsB,YC4CJC,G,wDAxCX,aAAc,IAAD,8BACT,gBAMJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SANxC,EAAKC,MAAM,CACPtB,OAAO,GACPmB,YAAY,IAJP,E,gEAUQ,IAAD,OAChBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKT,SAAS,CAAElB,OAAQ2B,S,+BAIrC,IAAD,EAC4BC,KAAKN,MAA7BtB,EADJ,EACIA,OAAQmB,EADZ,EACYA,YACVU,EAAiB7B,EAAO8B,QAAO,SAAAC,GACrC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAASd,EAAYa,kBAErD,OAAmB,IAAhBhC,EAAOkC,OAEC,oBAAIzC,UAAU,KAAd,wBAIP,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAE,EAAF,CAAWhB,OAAQ6B,a,GAjCrBM,IAAMC,YCMTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bdc3ea58.chunk.js","sourcesContent":["const Card=(props)=>{\n    return(\n        <div className='dib bg-light-green ma2 pa3 br3 bw2 grow shadow-5 tc'>\n            <img src={`https://robohash.org/${props.id}?200x200`} alt='robot'/>\n            <div>\n                <h2>{props.name}</h2>\n                <p>{props.email}</p>\n            </div>\n        </div>\n    )\n}\nexport default Card;","import Card from './Card'\nconst CardList=({robots})=>{\n\n\nreturn(\n        <div>\n        {    \n                robots.map((user,i)=>\n                {\n                return (\n                    <Card \n                        key={i} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email} \n                    />\n                )\n                })\n        }\n        </div>\n    )   \n}\n\nexport default CardList;","\n\nconst SearchBox=({searchChange})=>{\n    return(\n       <div className='pa3'> \n           <input \n                className='pa3 ba b--green bg-lightest-blue br3' \n                type='search' \n                placeholder='search robots' \n                onChange={searchChange}\n           />\n        </div>\n    )\n}\n\nexport default SearchBox;","const Scroll=(props)=>{\n    return(\n        <div style={{overflowY:'scroll',border:'5px solid black', height:'800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport './App.css'\n\nclass App extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            robots:[],\n            searchfield:''\n        }\n    }\n    onSearchChange=(event)=>{\n        this.setState({searchfield:event.target.value})\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n          .then(response=> response.json())\n          .then(users => {this.setState({ robots: users})});\n      }\n    \n\n    render(){\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        if(robots.length===0)\n        {\n            return <h1 className='tc'>Loading...</h1>\n        }\n        else{\n            return (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    < CardList robots={filteredRobots} />\n                </Scroll>\n            </div>\n            );\n        }\n    }\n    \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App'\nimport 'tachyons'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}